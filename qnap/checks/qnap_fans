#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2010             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Andre Eckstein <Andre.Eckstein@Bechtle.com>
# updated by Christian Burmeister 10/2015

qnap_fans_default_levels = (6000,6500)

def inventory_qnap_fans(checkname, info):
    inventory = []
    
    if len(info) == 0:
	return inventory

    # Dieses statische Inventory sollte ueberarbeitet werden, mein Qnap hat aber leider keine Luefter zum testen.
    inventory.append(("Fan 1", "qnap_fans_default_levels")) 
    inventory.append(("Fan 2", "qnap_fans_default_levels"))
    return inventory    

def check_qnap_fans(item, params, info):
    warn,crit = params
    rpm = ""
    for line in info:
	if item == "Fan 1":
             rpm = info[0][0]
        elif item == "Fan 2":
             rpm = info[0][1]
        rpm = rpm.rstrip("RPM ")
        rpm = int(rpm)
        perfdata = [("rpm", rpm, warn, crit)]
        infotxt = " - %d RPM (levels at %d/%d)" % (rpm, warn, crit)  
        if rpm >= crit:
                return (2, "CRIT" + infotxt, perfdata)
        elif rpm >= warn:
                return (1, "WARN" + infotxt, perfdata)
        else:
                return (0, "OK" + infotxt, perfdata)

    return (3, "UNKNOWN - No SNMP Output from agent")

check_info['qnap_fans'] = (check_qnap_fans, "QNAP %s", 1, inventory_qnap_fans)

snmp_info['qnap_fans'] = ( ".1.3.6.1.4.1.24681.1.2.15.1.3", [ "1", "2" ] )
snmp_scan_functions['qnap_fans'] = \
    lambda oid: oid('.1.3.6.1.2.1.47.1.1.1.1.12.1') and "QNAP Systems" in oid('.1.3.6.1.2.1.47.1.1.1.1.12.1')
