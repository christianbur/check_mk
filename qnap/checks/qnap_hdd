#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2010             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Author: Andre Eckstein <Andre.Eckstein@Bechtle.com>
# updated by Christian Burmeister 10/2015

qnap_hdd_temp_default_levels = (40,45)

def inventory_qnap_hdd(checkname, info):
#    import pprint; pprint.pprint(info)
    inventory = []
    for hdd, state, temp, model in info:
	if hdd.startswith( 'HDD' ):
	    inventory.append( (hdd, "", "qnap_hdd_temp_default_levels") )
    return inventory

def check_qnap_hdd(item, params, info):
    warn,crit = params
    
    for hdd, state, temp, model in info:
        temp = temp.split("/")
        temp = temp[0]
        temp = temp.rsplit(" C")
        temp = int(temp[0])
        perfdata = [("temp", temp, warn, crit)]
	infotext = " State is %s, HDD temperature is at %sC (levels at %s/%s), HDD-model: %s" % (state, temp, warn, crit, model)
        if hdd == item:
	    if (state == "GOOD") and (temp < warn): 
	        return (0, "OK - " + infotext, perfdata )
            elif (state == "GOOD") and (temp >= warn): 
                return (1, "Warning - " + infotext, perfdata ) 
	    elif (state != "GOOD") or (temp >=critical):
                return (2, "Critical - " + infotext, perfdata )
    return (3, "UNKNOWN - HDD")

check_info['qnap_hdd'] = (check_qnap_hdd, "QNAP %s", 1, inventory_qnap_hdd)

snmp_info['qnap_hdd'] = ( ".1.3.6.1.4.1.24681.1.2", [ "11.1.2", "11.1.7" , "11.1.3", "11.1.5"] )
snmp_scan_functions['qnap_hdd'] = \
    lambda oid: oid('.1.3.6.1.2.1.47.1.1.1.1.12.1') and "QNAP Systems" in oid('.1.3.6.1.2.1.47.1.1.1.1.12.1')
